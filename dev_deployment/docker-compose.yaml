# docker-compose.yml for Oauth2

# What's here:
#   wasmcloud host
#
# Ports open on localhost:
#  - 4000 phoenix ui (washboard)
#  - 4222,6222,8000 nats
#
# Data is not saved in volumes, to make it easier to start
#   with a clean image
#
version: '0.1'

services:
  reverse-proxy:
    image: traefik:v2.4.7
    container_name: traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverse-proxy.rule=Host(`traefik.jammin.dev`)"
      - "traefik.http.routers.reverse-proxy.entrypoints=web"
      - "traefik.http.services.reverse-proxy.loadbalancer.server.port=8080"
      - "traefik.http.routers.reverse-proxy.tls=true"
      - "traefik.docker.network=traefik-net"
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./traefik/config.yaml:/etc/traefik/config.yaml:ro
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./certs:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  wash:
    image: ghcr.io/jamminmusic/containers/wash-devcontainer:latest
    container_name: wasmcloud
    depends_on:
      - reverse-proxy
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wash.rule=Host(`wash.jammin.dev`)"
      - "traefik.http.routers.wash.entrypoints=web"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.services.wash.loadbalancer.server.port=4000"
    environment:
      RUST_LOG: debug,hyper=info
      WASMCLOUD_RPC_HOST: nats
      WASMCLOUD_CTL_HOST: nats
      WASMCLOUD_PROV_RPC_HOST: nats
      WASMCLOUD_CLUSTER_SEED: ${WASMCLOUD_CLUSTER_SEED}
      WASMCLOUD_VERSION: ${WASMC_VERSION}
      HOST_app: ${HOST_APP}
      OCI_REGISTRY: ${OCI_REG}
      OCI_REGISTRY_USER: ${OCI_USER}
      OCI_REGISTRY_PASSWORD: ${OCI_PASS}
    ports:
      - "4000:4000" # washboard
      - "8443:8443" # httpserver HTTPS port
      - "8080:8080"
    volumes:
      - ./wadm:/etc/wadm:ro
    command: wash up

  vault:
    image: hashicorp/vault:1.12
    depends_on:
      - reverse-proxy
    container_name: hashicorp_vault
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.jammin.dev`)"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.services.vault.loadbalancer.server.port=8201"
    restart: on-failure:10
    ports:
      - "8200:8200"
      - "8201:8201"
      - "8202:8202"
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8200'
      VAULT_API_ADDR: 'https://0.0.0.0:8201'
      VAULT_CLUSTER_ADDR: 'https://0.0.0.0:8202'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8201","tls_disable":"0", "tls_cert_file":"/etc/certs/0.0.0.0.pem", "tls_key_file":"/etc/certs/0.0.0.0-key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./certs:/etc/certs:ro
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"

  # Services for wadm
  redis:
    image: redis:7.0.8
    depends_on:
      - reverse-proxy
    container_name: redis_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`redis.jammin.dev`)"
      - "traefik.http.routers.redis.entrypoints=websecure"
      - "traefik.http.routers.redis.tls=true"
      - "traefik.http.services.redis.loadbalancer.server.port=8205"
    ports:
      - "6379:6379"
      - "8205:8200"

  nats:
    image: nats:2.8.4-alpine
    depends_on:
      - reverse-proxy
    container_name: nats_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nats.rule=Host(`nats.jammin.dev`)"
      - "traefik.http.routers.nats.entrypoints=websecure"
      - "traefik.http.routers.nats.tls=true"
      - "traefik.http.services.nats.loadbalancer.server.port=8222"
    ports:
      - "8222:8222" # 8222 is an HTTP management port for information reporting.
      - "4222:4222" # 4222 is for clients.
      - "6222:6222" # 6222 is a routing port for clustering.
    command: [ "-js" ]

  wadm:
    depends_on:
      - nats
      - redis
      - reverse-proxy
      - wash
    image: wasmcloud.azurecr.io/wadm:0.3.1
    container_name: wadm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wadm.rule=Host(`wadm.jammin.dev`)"
      - "traefik.http.routers.wadm.entrypoints=web"
      - "traefik.http.routers.vault.tls=true"
    environment:
      - WADM_NATS_HOST=nats
      - WADM_REDIS_HOST=redis
      - LOG_LEVEL=:debug

  grafana:
    image: grafana/grafana:8.1.2
    container_name: grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.jammin.dev`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    ports:
      - 3000:3000
    volumes:
      - ./tracing/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - tempo
  tempo:
    image: grafana/tempo:1.1.0
    container_name: tempo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tempo.rule=Host(`tempo.jammin.dev`)"
      - "traefik.http.routers.tempo.entrypoints=websecure"
      - "traefik.http.routers.tempo.tls=true"
      - "traefik.http.services.tempo.loadbalancer.server.port=8050"
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tracing/tempo.yaml:/etc/tempo.yaml
    ports:
      - 8050:8000 # tempo
      - 55681:55681 # otlp http  

networks:
  traefik-net:
    external: true
